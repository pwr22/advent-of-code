#!/usr/bin/perl

use strict;
use warnings;
use experimental 'declared_refs';
use feature 'declared_refs';
use Test::More tests => 14;

use Advent::Intcode;

# [ <INITIAL_STATE> <INPUT> <EXP_OUTPUT> ]
my @testcases = (

    # 1 if == 8, 0 otherwise with position mode
    [ '3,9,8,9,10,9,4,9,99,-1,8', "8\n", "1\n" ],
    [ '3,9,8,9,10,9,4,9,99,-1,8', "7\n", "0\n" ],

    # 1 if < 8, 0 otherwise with position mode
    [ '3,9,7,9,10,9,4,9,99,-1,8', "7\n", "1\n" ],
    [ '3,9,7,9,10,9,4,9,99,-1,8', "8\n", "0\n" ],

    # 1 if == 8, 0 otherwise with immediate mode
    [ '3,3,1108,-1,8,3,4,3,99', "8\n", "1\n" ],
    [ '3,3,1108,-1,8,3,4,3,99', "7\n", "0\n" ],

    # 1 if < 8, 0 otherwise with immediate mode
    [ '3,3,1107,-1,8,3,4,3,99', "7\n", "1\n" ],
    [ '3,3,1107,-1,8,3,4,3,99', "8\n", "0\n" ],

    # 0 if == 0, 1 otherwise
    [ '3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9', "0\n", "0\n" ],
    [ '3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9', "1\n", "1\n" ],

    # 999 if < 8, 1000 if == 8 and 1001 if > 8
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        "7\n",
        "999\n"
    ],
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        "8\n",
        "1000\n"
    ],
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        "9\n",
        "1001\n"
    ],

    # the task
    [ '3,225,1,225,6,6,1100,1,238,225,104,0,1001,210,88,224,101,-143,224,224,4,224,1002,223,8,223,101,3,224,224,1,223,224,223,101,42,92,224,101,-78,224,224,4,224,1002,223,8,223,1001,224,3,224,1,223,224,223,1101,73,10,225,1102,38,21,225,1102,62,32,225,1,218,61,224,1001,224,-132,224,4,224,102,8,223,223,1001,224,5,224,1,224,223,223,1102,19,36,225,102,79,65,224,101,-4898,224,224,4,224,102,8,223,223,101,4,224,224,1,224,223,223,1101,66,56,224,1001,224,-122,224,4,224,102,8,223,223,1001,224,2,224,1,224,223,223,1002,58,82,224,101,-820,224,224,4,224,1002,223,8,223,101,3,224,224,1,223,224,223,2,206,214,224,1001,224,-648,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,1102,76,56,224,1001,224,-4256,224,4,224,102,8,223,223,1001,224,6,224,1,223,224,223,1102,37,8,225,1101,82,55,225,1102,76,81,225,1101,10,94,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,8,226,677,224,102,2,223,223,1005,224,329,101,1,223,223,1008,677,677,224,1002,223,2,223,1006,224,344,1001,223,1,223,107,226,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,374,101,1,223,223,1107,677,677,224,1002,223,2,223,1006,224,389,101,1,223,223,108,226,677,224,102,2,223,223,1006,224,404,101,1,223,223,7,677,677,224,102,2,223,223,1006,224,419,101,1,223,223,108,677,677,224,102,2,223,223,1006,224,434,1001,223,1,223,7,226,677,224,102,2,223,223,1006,224,449,1001,223,1,223,108,226,226,224,102,2,223,223,1005,224,464,101,1,223,223,8,226,226,224,1002,223,2,223,1006,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1005,224,494,1001,223,1,223,1008,677,226,224,1002,223,2,223,1005,224,509,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,524,101,1,223,223,1007,677,226,224,1002,223,2,223,1006,224,539,1001,223,1,223,1108,677,226,224,102,2,223,223,1005,224,554,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,569,101,1,223,223,1108,226,677,224,1002,223,2,223,1005,224,584,101,1,223,223,1107,677,226,224,102,2,223,223,1006,224,599,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,614,1001,223,1,223,107,677,677,224,1002,223,2,223,1005,224,629,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,644,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,659,1001,223,1,223,1007,226,226,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226', "5\n", "11826654\n" ],
);

for (@testcases) {
    my ( $state, $input, $exp_output ) = $_->@*;

    open my $ifh, '<', \$input;
    my $output = '';
    open my $ofh, '>', \$output;
    my $sim = Advent::Intcode->new( state => $state, input => $ifh, output => $ofh );
    $sim->run();
    is_deeply( $output, $exp_output );
}
