#!/usr/bin/perl

use strict;
use warnings;
use experimental 'declared_refs';
use feature 'declared_refs';
use Test::More tests => 14;

use Advent::Intcode;
use Advent::Input;

# [ <INITIAL_STATE> [ <INPUTS> ] [ <EXP_OUTPUTS> ] ]
my @testcases = (

    # 1 if == 8, 0 otherwise with position mode
    [ '3,9,8,9,10,9,4,9,99,-1,8', [8], [1] ],
    [ '3,9,8,9,10,9,4,9,99,-1,8', [7], [0] ],

    # 1 if < 8, 0 otherwise with position mode
    [ '3,9,7,9,10,9,4,9,99,-1,8', [7], [1] ],
    [ '3,9,7,9,10,9,4,9,99,-1,8', [8], [0] ],

    # 1 if == 8, 0 otherwise with immediate mode
    [ '3,3,1108,-1,8,3,4,3,99', [8], [1] ],
    [ '3,3,1108,-1,8,3,4,3,99', [7], [0] ],

    # 1 if < 8, 0 otherwise with immediate mode
    [ '3,3,1107,-1,8,3,4,3,99', [7], [1] ],
    [ '3,3,1107,-1,8,3,4,3,99', [8], [0] ],

    # 0 if == 0, 1 otherwise
    [ '3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9', [0], [0] ],
    [ '3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9', [1], [1] ],

    # 999 if < 8, 1000 if == 8 and 1001 if > 8
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        [7],
        [999]
    ],
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        [8],
        [1000]
    ],
    [
'3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99',
        [9],
        [1001]
    ],

    # the task
    [ $Advent::Input::DAY_5, [5], [11826654] ],
);

for (@testcases) {
    my ( $state, \@inputs, \@exp_outputs ) = $_->@*;
    my $sim = Advent::Intcode->new( state => $state, input => \@inputs );
    $sim->run();
    is_deeply( $sim->output, \@exp_outputs );
}
